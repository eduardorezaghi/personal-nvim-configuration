local function my_on_attach(bufnr)
  local api = require "nvim-tree.api"

  local function opts(desc)
    return { desc = "nvim-tree: " .. desc, buffer = bufnr, noremap = true, silent = true, nowait = true }
  end

  -- default mappings
  api.config.mappings.default_on_attach(bufnr)
end



return {
    {
       "github/copilot.vim",
        {
            "neovim/nvim-lspconfig",
            lazy = false,
            config = function()
              local capabilities = require('cmp_nvim_lsp').default_capabilities()
        
              local lspconfig = require("lspconfig")
              lspconfig.tsserver.setup({
                capabilities = capabilities
              })
              lspconfig.html.setup({
                capabilities = capabilities
              })
              lspconfig.lua_ls.setup({
                capabilities = capabilities
              })
        
              vim.keymap.set("n", "K", vim.lsp.buf.hover, {})
              vim.keymap.set("n", "<leader>gd", vim.lsp.buf.definition, {})
              vim.keymap.set("n", "<leader>gr", vim.lsp.buf.references, {})
              vim.keymap.set("n", "<leader>ca", vim.lsp.buf.code_action, {})
            end,
          },
        "nvim-lua/plenary.nvim",
        {"nvim-treesitter/nvim-treesitter", build = ":TSUpdate"},
        { "nvim-telescope/telescope.nvim",
            tag = "0.1.5",
            config = function()
                require('telescope').setup({
                    defaults = {
                        file_ignore_patterns = { "node_modules", ".git" },
                    },
                })
            end,
        },
        "preservim/nerdtree",
        "ellisonleao/gruvbox.nvim",
        { 'alexghergh/nvim-tmux-navigation', config = function()

            local nvim_tmux_nav = require('nvim-tmux-navigation')
        
            nvim_tmux_nav.setup {
                disable_when_zoomed = true -- defaults to false
            }
        
            vim.keymap.set('n', "<M-h>", nvim_tmux_nav.NvimTmuxNavigateLeft)
            vim.keymap.set('n', "<M-j>", nvim_tmux_nav.NvimTmuxNavigateDown)
            vim.keymap.set('n', "<M-k>", nvim_tmux_nav.NvimTmuxNavigateUp)
            vim.keymap.set('n', "<M-l>", nvim_tmux_nav.NvimTmuxNavigateRight)
            vim.keymap.set('n', "<M-Space>", nvim_tmux_nav.NvimTmuxNavigateNext)
        
        end
        },
        {"mg979/vim-visual-multi", branch = "master"},
        "tpope/vim-fugitive",
	{ "lewis6991/gitsigns.nvim", 
	  config = function()
	    require('gitsigns').setup {
		    current_line_blame = true,
	    }
	  end
	},
    {
        "williamboman/mason.nvim",
        lazy = false,
        config = function()
            require("mason").setup({
                PATH = "prepend",
            })
        end,
      },
      {
        "williamboman/mason-lspconfig.nvim",
        lazy = false,
        opts = {
          auto_install = true,
          config = function()
          require("mason-lspconfig").setup({
            ensure_installed = {
                "lua_ls",
                "tsserver",
                "html",

            },
          })
          end,
        },
      },

    { "kdheepak/lazygit.nvim",
            -- optional for floating window border decoration
            dependencies = {
                "nvim-lua/plenary.nvim",
            },
        },
    { "hrsh7th/cmp-nvim-lsp" },
	{
        "L3MON4D3/LuaSnip",
        -- follow latest release.
        version = "v2.*", -- Replace <CurrentMajor> by the latest released major (first number of latest release)
        -- install jsregexp (optional!).
        build = "make install_jsregexp",
        dependencies = {
            "rafamadriz/friendly-snippets",
        },
	},
    {
        "hrsh7th/nvim-cmp",
        config = function()
          local cmp = require("cmp")
          require("luasnip.loaders.from_vscode").lazy_load()
    
          cmp.setup({
            snippet = {
              expand = function(args)
                require("luasnip").lsp_expand(args.body)
              end,
            },
            window = {
              completion = cmp.config.window.bordered(),
              documentation = cmp.config.window.bordered(),
            },
            mapping = cmp.mapping.preset.insert({
              ["<C-b>"] = cmp.mapping.scroll_docs(-4),
              ["<C-f>"] = cmp.mapping.scroll_docs(4),
              ["<C-Space>"] = cmp.mapping.complete(),
              ["<C-e>"] = cmp.mapping.abort(),
              ["<CR>"] = cmp.mapping.confirm({ select = true }),
            }),
            sources = cmp.config.sources({
              { name = "nvim_lsp" },
              { name = "luasnip" }, -- For luasnip users.
            }, {
              { name = "buffer" },
            }),
          })
        end,
      },
	{ "nvim-tree/nvim-tree.lua",
	    version = "*",
	    lazy = false,
	    dependencies = { "nvim-tree/nvim-web-devicons" },
	    config = function()
		require('nvim-tree').setup {
		    -- hijack the cursor in the tree to put it at the start of the filename
		    hijack_cursor = true,
		    -- updates the root directory of the tree on `DirChanged` (when your run `:cd` usually)
		    update_cwd = true,
		    -- show lsp diagnostics in the signcolumn
		    diagnostics = {
			enable = true,
		    },
		    on_attach = my_on_attach,
		}
	    end,
	},
	{
	    'nvim-lualine/lualine.nvim',
	    dependencies = { 'nvim-tree/nvim-web-devicons' }
	},
	{
	  "folke/which-key.nvim",
	  event = "VeryLazy",
	  init = function()
	    vim.o.timeout = true
	    vim.o.timeoutlen = 300
	  end,
	  opts = {
	    -- your configuration comes here
	    -- or leave it empty to use the default settings
	    -- refer to the configuration section below
	  }
	},
    }
}
